name: Run Maven Release
permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package --no-transfer-progress

      - name: Set up GraalVM JDK 21
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Reflection Configs for GraalVM Inputs
        run: |
          mkdir -p reflect-config/bot reflect-config/scraper
          java -Dapp.mode=tracing \
            -Dlogback.configurationFile=src/main/resources/logback-disabled.xml \
            -agentlib:native-image-agent=config-output-dir=reflect-config/bot \
            -jar target/bot.jar
          java -Dapp.mode=tracing \
            -Dlogback.configurationFile=src/main/resources/logback-disabled.xml \
            -agentlib:native-image-agent=config-output-dir=reflect-config/scraper \
            -jar target/scraper.jar

      - name: Merge Overrides into Reflect Config
        run: |
          jq -s 'add' reflect-config/reflect-config.json build/graalvm/reflect-config.json > reflect-config/merged.json
          mv reflect-config/merged.json reflect-config/reflect-config.json

      - name: Upload full reflect-config as artifact
        uses: actions/upload-artifact@v4
        with:
          name: reflect-config
          path: reflect-config

      - name: Build GraalVM Native Images
        run: |
          native-image --no-fallback --gc=serial -H:ConfigurationFileDirectories=reflect-config/bot \
            -jar target/bot.jar -o bot
          native-image --no-fallback --gc=serial -H:ConfigurationFileDirectories=reflect-config/scraper \
            -jar target/scraper.jar -o scraper

      - name: Compress Binaries
        run: |
          tar -czf bot.tar.gz bot
          tar -czf scraper.tar.gz scraper

      - name: Prepare Release Artifacts
        run: |
          mkdir -p /tmp/release
          cp target/bot.jar target/scraper.jar /tmp/release/
          cp docs/release/README.md /tmp/release/
          cp bot.tar.gz scraper.tar.gz /tmp/release/

      - name: Create GitHub Release and Upload Files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create "${GITHUB_REF##*/}" /tmp/release/* --notes-file /tmp/release/README.md